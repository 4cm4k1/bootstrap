# SET PACKAGE MANAGER & SDK LOCATIONS
export BREW_HOME=$(brew --prefix)
export ANDROID_HOME=${HOME}/Library/Android/sdk
export GCLOUD_SDK=${BREW_HOME}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk
export DART_SDK=${BREW_HOME}/opt/dart/libexec
export FLUTTER_SDK=${HOME}/Code/flutter

# SET PATH COMPONENTS
export BREW_BIN=${BREW_HOME}/bin:${BREW_HOME}/sbin
export ANDROID_BUILD_TOOLS=${ANDROID_HOME}/build-tools/26.0.1
export ANDROID_PLATFORM_TOOLS=${ANDROID_HOME}/platform-tools
export ANDROID_TOOLS=${ANDROID_HOME}/tools
export ANDROID_TOOLS_BIN=${ANDROID_HOME}/tools/bin
export ANDROID_BIN=${ANDROID_BUILD_TOOLS}:${ANDROID_PLATFORM_TOOLS}:${ANDROID_TOOLS}:${ANDROID_TOOLS_BIN}
export COREUTILS_BIN=$(brew --prefix coreutils)/libexec/gnubin
export DEFAULT_BIN=/usr/bin:/bin:/usr/sbin:/sbin
export GCLOUD_BIN=${GCLOUD_SDK}/path.zsh.inc
export DART_BIN=${HOME}/.pub-cache/bin
export FLUTTER_BIN=${FLUTTER_SDK}/bin
export RUST_BIN=${HOME}/.cargo/bin
export PYTHON_BIN=/usr/local/opt/python/libexec/bin
# Fix problems between Android SDK Manager & Java 9
# https://stackoverflow.com/questions/47150410/failed-to-run-sdkmanager-list-android-sdk-with-java-9
# export SDKMANAGER_OPTS='--add-modules java.se.ee'

# SET MANPATH COMPONENTS
export COREUTILS_MAN=$(brew --prefix coreutils)/libexec/gnuman

# SET GCLOUD PATH & COMPLETIONS
source ${GCLOUD_BIN}
source ${GCLOUD_SDK}/completion.zsh.inc

# SET PATH & MANPATH
export PATH=${COREUTILS_BIN}:${BREW_BIN}:${ANDROID_BIN}:${DART_BIN}:${FLUTTER_BIN}:${JAVA_BIN}:${RUST_BIN}:${PYTHON_BIN}:${DEFAULT_BIN}:${PATH}
export MANPATH=${COREUTILS_MAN}:${MANPATH}

# SET EDITORS
if [[ -n ${SSH_CONNECTION} ]]; then
  export EDITOR='nano'
else
  export EDITOR='nano'
fi

# Adapted from https://github.com/mathiasbynens/dotfiles/blob/master/.exports

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY=${HOME}/.node_history;
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768';
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy';

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8';

# Increase Bash history size. Allow 32³ entries; the default is 500.
export HISTSIZE='32768';
export HISTFILESIZE="${HISTSIZE}";
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth';

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8';
export LC_ALL='en_US.UTF-8';

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
export GPG_TTY=$(tty);

# START GPG-AGENT
export SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh
gpgconf --launch gpg-agent

# ALIASES (MUST COME LAST)
alias apm='apm-beta'
alias atom='atom-beta'
alias gr='gr'
alias ls='ls --color=always -AGHX --group-directories-first'
# UPDATE & CLEAN COMMANDS
alias atom_up='apm update -c false'
alias brew_clean='brew cleanup'
alias brew_up='brew update && brew upgrade'
alias docker_clean='docker system prune -f && docker-clean'
alias flutter_up='flutter upgrade'
alias gcloud_up='gcloud components update -q'
alias mac_up='mas outdated'
alias npm_clean='npm cache verify'
alias npm_up='npm i -g npm@next'
alias pub_up='pubglobalupdate'
alias python_up='python ~/.piplist.py | cut -d = -f1 | xargs -n1 pip install -qU'
alias ruby_clean='gem cleanup'
alias ruby_up='gem update'
alias yarn_clean='yarn cache clean'
alias yarn_up='yarn global upgrade-interactive --latest'
alias zplug_up='zplug update && zplug load'
alias 1up_clean='brew_clean && docker_clean && npm_clean && ruby_clean && yarn_clean'
alias 1up='atom_up && brew_up && flutter_up && gcloud_up && mac_up && npm_up && pub_up && python_up && ruby_up && yarn_up && zplug_up'

export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh

zplug "plugins/colored-man-pages", from:oh-my-zsh
zplug "mafredri/zsh-async", from:github
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions", defer:2
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-history-substring-search", defer:3

# ZSH history
setopt append_history
setopt hist_expire_dups_first
setopt hist_fcntl_lock
setopt hist_ignore_all_dups
setopt hist_lex_words
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt share_history

export CLICOLOR=1
export BLOCK_SIZE=human-readable # https://www.gnu.org/software/coreutils/manual/html_node/Block-size.html
export HISTSIZE=11000
export SAVEHIST=10000
export HISTFILE=~/.zsh_history

if zplug check zsh-users/zsh-autosuggestions; then
  ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-substring-search-up history-substring-search-down) # Add history-substring-search-* widgets to list of widgets that clear the autosuggestion
  ZSH_AUTOSUGGEST_CLEAR_WIDGETS=("${(@)ZSH_AUTOSUGGEST_CLEAR_WIDGETS:#(up|down)-line-or-history}") # Remove *-line-or-history widgets from list of widgets that clear the autosuggestion to avoid conflict with history-substring-search-* widgets
fi

if zplug check zsh-users/zsh-history-substring-search; then
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down
fi

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

# added by travis gem
[ -f /Users/4cm4k1/.travis/travis.sh ] && source /Users/4cm4k1/.travis/travis.sh
export PATH="/usr/local/opt/curl/bin:$PATH"
export PATH="/usr/local/opt/ruby/bin:$PATH"
